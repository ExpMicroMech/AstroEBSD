%% PC_Stats.m
% By T Ben Britton, October 2023
% This script performs fitting of the PC shift values to beam shift values
% for the line scans on the Si(001) sample.
% PC data are recorded in 'LineScan_PC.xlsx and are directly read by this
% script
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\benja\OneDrive - UBC\Writing\Static_EBSD\LineScan_PC.xlsx
%    Worksheet: VertScanNew (2)
%
% Auto-generated by MATLAB on 01-Nov-2023 18:06:43
home;
clear;
close all;
%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 4);

% Specify sheet and range - names are messed up!
% opts.Sheet = "VertScanNew (2)";
opts.Sheet = "HoriScanNew";
opts.DataRange = "A4:D23";

% Specify column names and types
opts.VariableNames = ["Pattern", "PCx", "PCy", "PCz"];
opts.VariableTypes = ["double", "double", "double", "double"];

% Import the data
LineScanPC_v = readtable("LineScan_PC.xlsx", opts, "UseExcel", false);

% opts.Sheet = "HoriScanNew";
opts.Sheet = "VertScanNew (2)";
LineScanPC_h = readtable("LineScan_PC.xlsx", opts, "UseExcel", false);

%% Clear temporary variables
 
%% Plot
figure;
subplot(2,2,1);
plot(LineScanPC_h.Pattern,LineScanPC_h.PCx,'r--o');
hold on
plot(LineScanPC_h.Pattern,LineScanPC_h.PCy,'g--+');
plot(LineScanPC_h.Pattern,LineScanPC_h.PCz,'b--x');
legend({'PCx','PCy','PCz'},'Location','EastOutside');
xlabel('Pattern Number')
ylabel('PC Value')
title('Horizontal Scan')

subplot(2,2,2);
plot(LineScanPC_v.Pattern,LineScanPC_v.PCx,'r--o');
hold on
plot(LineScanPC_v.Pattern,LineScanPC_v.PCy,'g--+');
plot(LineScanPC_v.Pattern,LineScanPC_v.PCz,'b--x');
legend({'PCx','PCy','PCz'},'Location','EastOutside');
xlabel('Pattern Number')
ylabel('PC Value')
title('Vertical Scan')

% Process the data a bit to make the visualization easier

data_norm = @(x) x-mean(x);
data_step=20; %um

%{ 
Horizontal -

Scan type = regular scan over a spaced grid
X start: 250, X spacing=10, Y start: 200, Y spacing=1
Grid points: 20x1
Mag: 111.5x
Pixel size (m): 1.005117E-06
Stage X (m): 0.097554
Stage Y (m): 0.06984564
Stage Z (m): 0.001238398

Vertical - 
Scan type = regular scan over a spaced grid
X start: 250, X spacing=1, Y start: 200, Y spacing=10
Grid points: 1x20
Mag: 111.5x
Pixel size (m): 1.005117E-06
Stage X (m): 0.097554
Stage Y (m): 0.06984564
Stage Z (m): 0.001238398
%}

h_step=1E6*1.005117E-06*10; %from the linescan file, and converted toum
v_step=1E6*1.005117E-06*10; %from the linescan file, and converted toum

h_PatternNum=h_step*data_norm(LineScanPC_h.Pattern);
h_PC_x=data_norm(LineScanPC_h.PCx);
h_PC_y=data_norm(LineScanPC_h.PCy);
h_PC_z=data_norm(LineScanPC_h.PCz);

v_PatternNum=v_step*data_norm(LineScanPC_v.Pattern);
v_PC_x=data_norm(LineScanPC_v.PCx);
v_PC_y=data_norm(LineScanPC_v.PCy);
v_PC_z=data_norm(LineScanPC_v.PCz);

subplot(2,2,3);
plot(h_PatternNum,h_PC_x,'r--o');
hold on
plot(h_PatternNum,h_PC_y,'g--+');
plot(h_PatternNum,h_PC_z,'b--x');
legend({'\DeltaPCx','\DeltaPCy','\DeltaPCz'},'Location','EastOutside');
xlabel('\DeltaX_S (\mum)')
ylabel('\DeltaPC Value')
title('Horizontal Scan')

subplot(2,2,4);
plot(v_PatternNum,v_PC_x,'r--o');
hold on
plot(v_PatternNum,v_PC_y,'g--+');
plot(v_PatternNum,v_PC_z,'b--x');
legend({'\DeltaPCx','\DeltaPCy','\DeltaPCz'},'Location','EastOutside');
xlabel('\DeltaY_S (\mum)')
ylabel('\DeltaPC Value')
title('Vertical Scan')

%% Fit some data and plot this

[fit_h_pcx,gof_h_pcx] = fitdata(h_PatternNum,h_PC_x);
[fit_h_pcy,gof_h_pcy] = fitdata(h_PatternNum,h_PC_y);
[fit_h_pcz,gof_h_pcz] = fitdata(h_PatternNum,h_PC_z);

[fit_v_pcx,gof_v_pcx] = fitdata(h_PatternNum,v_PC_x);
[fit_v_pcy,gof_v_pcy] = fitdata(h_PatternNum,v_PC_y);
[fit_v_pcz,gof_v_pcz] = fitdata(h_PatternNum,v_PC_z);

figure;
subplot(1,2,1)
h_pcx = plot( fit_h_pcx, h_PatternNum, h_PC_x);
hold on
h_pcy = plot( fit_h_pcy, h_PatternNum, h_PC_y);
h_pcz = plot( fit_h_pcz, h_PatternNum, h_PC_z);
title('Horizontal Scan')

h_pcx(1).Color='r';
h_pcx(2).Color='r';
h_pcx(1).DisplayName='PCx';
h_pcx(2).DisplayName='PCx fit';

h_pcy(1).Color='g';
h_pcy(2).Color='g';
h_pcy(1).DisplayName='PCy';
h_pcy(2).DisplayName='PCy fit';

h_pcz(1).Color='b';
h_pcz(2).Color='b';
h_pcz(1).DisplayName='PCz';
h_pcz(2).DisplayName='PCz fit';


ylabel('\DeltaPC')
xlabel('\DeltaX_S (\mum)')

subplot(1,2,2)
v_pcx = plot( fit_v_pcx, v_PatternNum, v_PC_x);
hold on
v_pcy = plot( fit_v_pcy, v_PatternNum, v_PC_y);
v_pcz = plot( fit_v_pcz, v_PatternNum, v_PC_z);

title('Vertical Scan')
v_pcx(1).Color='r';
v_pcx(2).Color='r';
v_pcx(1).DisplayName='PCx';
v_pcx(2).DisplayName='PCx fit';

v_pcy(1).Color='g';
v_pcy(2).Color='g';
v_pcy(1).DisplayName='PCy';
v_pcy(2).DisplayName='PCy fit';

v_pcz(1).Color='b';
v_pcz(2).Color='b';
v_pcz(1).DisplayName='PCz';
v_pcz(2).DisplayName='PCz fit';

ylabel('\DeltaPC')
xlabel('\DeltaY_S (\mum)')


%% Extract the values
delta_v_PCx=fit_v_pcx.p1;
delta_v_PCy=fit_v_pcy.p1;
delta_v_PCz=fit_v_pcz.p1;

delta_h_PCx=fit_h_pcx.p1;
delta_h_PCy=fit_h_pcy.p1;
delta_h_PCz=fit_h_pcz.p1;

ci_extract_p=@(x) confint(x,0.95);
delta_v_PCx_ci = ci_extract_p(fit_v_pcx);
delta_v_PCy_ci = ci_extract_p(fit_v_pcy);
delta_v_PCz_ci = ci_extract_p(fit_v_pcz);

delta_h_PCx_ci = ci_extract_p(fit_h_pcx);
delta_h_PCy_ci = ci_extract_p(fit_h_pcy);
delta_h_PCz_ci = ci_extract_p(fit_h_pcz);

% data_v=zeros(3,3);
data_v_1=[delta_v_PCx,delta_v_PCy,delta_v_PCz];
data_v_2=[delta_v_PCx_ci(:,1),delta_v_PCy_ci(:,1),delta_v_PCz_ci(:,1)];
data_v=[data_v_1;data_v_2];

%data_v_1 = the fitted values
%data_v_2 = the confidence bounds

% data_v=zeros(3,3);
data_h_1=[delta_h_PCx,delta_h_PCy,delta_h_PCz];
data_h_2=[delta_h_PCx_ci(:,1),delta_h_PCy_ci(:,1),delta_h_PCz_ci(:,1)];
data_h=[data_h_1;data_h_2];

%data_h_1 = the fitted values
%data_h_2 = the confidence bounds

wedge_angle=-atand(data_v(1,2)/data_v(1,3)) %in degrees
wedge_angle_p=-atand(data_v(3,2)/data_v(2,3)) %in degrees
wedge_angle_n=-atand(data_v(2,2)/data_v(3,3)) %in degrees

% wedge_angle_p1=atand(data_v(3,2)/data_v(2,3)) %in degrees
% wedge_angle_p1=atand(data_v(3,2)/data_v(2,3)) %in degrees

%data_h(1) %this is the horizontal scale factor, which should be related to
%the step size in um - but I can't remember how to do this

% the horizontal Delta PCx slope is given by: N * 1 / 55 / 252
sem_step=-data_h(1,1) * 55 * 252 %in um
sem_step_p=data_h(2,1) * 55 * 252 %in um
sem_step_n=-data_h(2,1) * 55 * 252 %in um

